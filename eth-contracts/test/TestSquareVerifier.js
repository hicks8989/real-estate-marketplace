// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require('Verifier');
// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps

// Test verification with incorrect proof
contract("TestSquareVerifier", accounts => {

  const proof = require("./proof.json");
  const owner = accounts[0];

  describe('Test Validator', function () {
    beforeEach(async function() {
      this.contract = await Verifier.new({
        from: owner
      });
      this.proof = proof.proof;
      this.inputs = proof.inputs;
    });

    it('Can test verification of a proof', async function() {
      const result = await this.contract.verifyTx.call(this.proof.a, this.proof.b, this.proof.c, this.inputs, {
        from: owner
      });
      assert(result, "Invalid proof");
    });

    it('Can test verification of an incorrect proof', async function() {
      const result = await this.contract.verifyTx.call(this.proof.a, this.proof.b, this.proof.c, [7, 23], {
        from: owner
      });
      assert(!result, "Invalid proof");
    });
  });
});